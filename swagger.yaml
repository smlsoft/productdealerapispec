openapi: 3.0.0
info:
  description: "This is a Spec For SML Product Dealer."
  version: 1.0.2
  title: Product Dealer API
  contact:
    email: toe@smlsoft.com
tags:
  - name: Product
  - name: Dealer
  - name: Product Dealer
  - name: Transaction
    description: Sync transaction from SMLAccount
  - name: Item Unit
  - name: Item Brand
  - name: Item Category
  - name: Item Group Main
  - name: Item Group Sub
  - name: Item Class
  - name: Item Pattern
  - name: Item Design
  - name: Item Grade
  - name: Item Model
  - name: Master Sync
  - name: Stock Dealer
servers:
  - url: '{protocal}://{server}/productdealerapi/v1'
    variables:
      protocal:
        enum:
          - https
          - http
        default: http
      server:
        default: localhost:8888
paths:
  /product:
    post:
      tags:
        - Product
      summary: Add new product
      operationId: addProduct
      description: for add product to sync to dealer
      requestBody:
        $ref: "#/components/requestBodies/Product"
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseSuccess'
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "500":
          $ref: "#/components/responses/500"
      security:
        - bearer_token: []
    get:
      tags:
        - Product
      summary: "List product."
      description: for list product in system
      operationId: listProduct
      responses:
        "200":
          description: List of product object
          content:
            application/json:
              schema:
                type: object
                allOf:
                   - $ref: "#/components/schemas/Product"
                properties:
                  dealers:
                    type: array
                    description: ผู้แทนจำหน่าย
                    items:
                      $ref: "#/components/schemas/ProductDealerSync"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "500":
          $ref: "#/components/responses/500"
      security:
        - bearer_token: []
  /product/{code}:
    get:
      tags:
        - Product
      parameters:
        - name: code
          in: path
          description: code of product to return
          required: true
          schema:
            type: string
      summary: "Get product information by product code"
      operationId: getProduct
      description: "get product information by code"
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        "400":
          description: "Bad request"
      security:
        - bearer_token: []          
    put:
      tags:
        - Product
      parameters:
        - name: code
          in: path
          description: code of product to return
          required: true
          schema:
            type: integer
            format: int64
      summary: "Update an existing product"
      operationId: updateProduct
      description: "for update product sync to dealer"
      requestBody:
        $ref: "#/components/requestBodies/Product"
      responses:
        "200":
          description: "Success"
        "400":
          description: "Bad request"
      security:
        - bearer_token: []          
    delete:
      parameters:
        - name: code
          in: path
          description: code of product to return
          required: true
          schema:
            type: integer
            format: int64
      tags:
        - Product
      summary: "Remove product"
      operationId: deleteProduct
      description: "for delete product sync to dealer"
      responses:
        "200":
          description: "Success"
        "400":
          description: "Bad request"
      security:
        - bearer_token: []          
  /dealer:
    post:
      tags:
        - Dealer
      summary: Create new dealer
      operationId: addDealer
      description: "for add new dealer"
      requestBody:
        $ref: '#/components/requestBodies/Dealer'
      responses:
        "200":
          description: "Success"
        "400":
          description: "Bad request"
      security:
        - bearer_token: []          
    get:
      tags:
        - Dealer
      operationId: listDealer
      summary: List dealer
      description: "for list all dealer."      
      responses:
        "200":
          description: "Success"
        "400":
          description: "Bad request"
      security:
        - bearer_token: []          
  /dealer/{code}:
    get:
      tags:
        - Dealer
      operationId: getDealer
      summary: Get dealer by code.
      description: "for get dealer by dealer code."
      parameters:
        - name: code
          in: path
          description: code of dealer to return
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "Success"
        "400":
          description: "Bad request"
      security:
        - bearer_token: []          
    put:
      tags:
        - Dealer
      operationId: updateDealer
      summary: Update an existing dealer
      description: "for add product sync to dealer"
      parameters:
        - name: code
          in: path
          description: code of product to update
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/Dealer'
      responses:
        "200":
          description: "Success"
        "400":
          description: "Bad request"
      security:
        - bearer_token: []          
    delete:
      tags:
        - Dealer
      operationId: deleteDealer
      summary: Delete a dealer
      description: "for add product sync to dealer"
      parameters:
        - name: code
          in: path
          description: code of dealer to delete
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "Success"
        "400":
          description: "Bad request"
      security:
        - bearer_token: []          
  /productdealer:
    put:
      tags:
        - Product Dealer
      operationId: setProductDealer
      summary: Set product for dealer
      description: set a product for dealer
      requestBody:
        $ref: '#/components/requestBodies/ProductDealer'
      responses:
        "200":
          description: "Success"
        "400":
          description: "Bad request"
      security:
        - bearer_token: []      
  /itemunit:
    post:
      tags:
        - Item Unit
      summary: Create new item unit
      operationId: addItemUnit
      description: "for add new item unit"
      requestBody:
        $ref: '#/components/requestBodies/ItemUnit'
      responses:
        "201":
          $ref: "#/components/responses/201"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "500":
          $ref: "#/components/responses/500"
      security:
        - bearer_token: []          
    get:
      tags:
        - Item Unit
      operationId: listItemUnit
      summary: List item unit
      description: "for list all item unit."      
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                allOf:
                   - $ref: '#/components/schemas/ResponseSuccess'
                properties:
                  data:
                    type: array
                    description: Item unit
                    items:
                      $ref: '#/components/schemas/Unit'
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "500":
          $ref: "#/components/responses/500"
      security:
        - bearer_token: []
  /itemunit/{code}:
    get:
      tags:
        - Item Unit
      operationId: getItemUnit
      summary: Get item unit by code.
      description: "for get item unit by code."
      parameters:
        - name: code
          in: path
          description: code of item unit to return
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                allOf:
                   - $ref: '#/components/schemas/ResponseSuccess'
                properties:
                  data:
                    type: object
                    $ref: '#/components/schemas/Unit'
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "500":
          $ref: "#/components/responses/500"
      security:
        - bearer_token: []          
    put:
      tags:
        - Item Unit
      operationId: updateItemUnit
      summary: Update an existing item unit
      description: "for add product sync to item unit"
      parameters:
        - name: code
          in: path
          description: code of product to update
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/ItemUnit'
      responses:
        "200":
          $ref: "#/components/responses/200"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "500":
          $ref: "#/components/responses/500"
      security:
        - bearer_token: []
    delete:
      tags:
        - Item Unit
      operationId: deleteItemUnit
      summary: Delete a item unit
      description: "for add item unit"
      parameters:
        - name: code
          in: path
          description: code of item unit to delete
          required: true
          schema:
            type: string
      responses:
        "200":
          $ref: "#/components/responses/200"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "500":
          $ref: "#/components/responses/500"
      security:
        - bearer_token: []
  /itembrand:
    post:
      tags:
        - Item Brand
      summary: Create new item Brand
      operationId: addItemBrand
      description: "for add new item Brand"
      requestBody:
        $ref: '#/components/requestBodies/ItemBrand'
      responses:
        "201":
          $ref: "#/components/responses/201"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "500":
          $ref: "#/components/responses/500"
      security:
        - bearer_token: []          
    get:
      tags:
        - Item Brand
      operationId: listItemBrand
      summary: List item Brand
      description: "for list all item Brand."      
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                allOf:
                   - $ref: "#/components/schemas/ResponseSuccess"
                properties:
                  data:
                    type: array
                    description: Item Brand
                    items:
                      $ref: "#/components/schemas/ItemBrand"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "500":
          $ref: "#/components/responses/500"
      security:
        - bearer_token: []
  /itembrand/{code}:
    get:
      tags:
        - Item Brand
      operationId: getItemBrand
      summary: Get item Brand by code.
      description: "for get item Brand by code."
      parameters:
        - name: code
          in: path
          description: code of item Brand to return
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                allOf:
                   - $ref: "#/components/schemas/ResponseSuccess"
                properties:
                  data:
                    type: object
                    $ref: "#/components/schemas/ItemBrand"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "500":
          $ref: "#/components/responses/500"
      security:
        - bearer_token: []          
    put:
      tags:
        - Item Brand
      operationId: updateItemBrand
      summary: Update an existing item Brand
      description: "for add product sync to item Brand"
      parameters:
        - name: code
          in: path
          description: code of product to update
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/ItemBrand'
      responses:
        "200":
          $ref: "#/components/responses/200"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "500":
          $ref: "#/components/responses/500"
      security:
        - bearer_token: []
    delete:
      tags:
        - Item Brand
      operationId: deleteItemBrand
      summary: Delete a item Brand
      description: "for add item Brand"
      parameters:
        - name: code
          in: path
          description: code of item Brand to delete
          required: true
          schema:
            type: string
      responses:
        "200":
          $ref: "#/components/responses/200"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "500":
          $ref: "#/components/responses/500"
      security:
        - bearer_token: []
  /itemcategory:
    post:
      tags:
        - Item Category
      summary: Create new item category
      operationId: addItemCategory
      description: "for add new item category"
      requestBody:
        $ref: '#/components/requestBodies/ItemCategory'
      responses:
        "201":
          $ref: "#/components/responses/201"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "500":
          $ref: "#/components/responses/500"
      security:
        - bearer_token: []          
    get:
      tags:
        - Item Category
      operationId: listItemCategory
      summary: List item category
      description: "for list all item category."      
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                allOf:
                   - $ref: "#/components/schemas/ResponseSuccess"
                properties:
                  data:
                    type: array
                    description: item category
                    items:
                      $ref: "#/components/schemas/ItemCategory"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "500":
          $ref: "#/components/responses/500"
      security:
        - bearer_token: []
  /itemcategory/{code}:
    get:
      tags:
        - Item Category
      operationId: getItemCategory
      summary: Get item category by code.
      description: "for get item category by code."
      parameters:
        - name: code
          in: path
          description: code of item category to return
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                allOf:
                   - $ref: "#/components/schemas/ResponseSuccess"
                properties:
                  data:
                    type: object
                    $ref: "#/components/schemas/ItemCategory"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "500":
          $ref: "#/components/responses/500"
      security:
        - bearer_token: []          
    put:
      tags:
        - Item Category
      operationId: updateItemCategory
      summary: Update an existing item category
      description: "for add product sync to item category"
      parameters:
        - name: code
          in: path
          description: code of product to update
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/ItemCategory'
      responses:
        "200":
          $ref: "#/components/responses/200"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "500":
          $ref: "#/components/responses/500"
      security:
        - bearer_token: []
    delete:
      tags:
        - Item Category
      operationId: deleteItemCategory
      summary: Delete a item category
      description: "for add item category"
      parameters:
        - name: code
          in: path
          description: code of item category to delete
          required: true
          schema:
            type: string
      responses:
        "200":
          $ref: "#/components/responses/200"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "500":
          $ref: "#/components/responses/500"
      security:
        - bearer_token: []
  /itemgroupmain:
    post:
      tags:
        - Item Group Main
      summary: Create new item Group Main
      operationId: addItemGroup Main
      description: "for add new item Group Main"
      requestBody:
        $ref: '#/components/requestBodies/ItemGroupMain'
      responses:
        "201":
          $ref: "#/components/responses/201"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "500":
          $ref: "#/components/responses/500"
      security:
        - bearer_token: []          
    get:
      tags:
        - Item Group Main
      operationId: listItemGroup Main
      summary: List item Group Main
      description: "for list all item Group Main."      
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                allOf:
                   - $ref: "#/components/schemas/ResponseSuccess"
                properties:
                  data:
                    type: array
                    description: Item Group Main
                    items:
                      $ref: "#/components/schemas/ItemGroupMain"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "500":
          $ref: "#/components/responses/500"
      security:
        - bearer_token: []
  /itemgroupmain/{code}:
    get:
      tags:
        - Item Group Main
      operationId: getItemGroup Main
      summary: Get item Group Main by code.
      description: "for get item Group Main by code."
      parameters:
        - name: code
          in: path
          description: code of item Group Main to return
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                allOf:
                   - $ref: "#/components/schemas/ResponseSuccess"
                properties:
                  data:
                    type: object
                    $ref: "#/components/schemas/ItemGroupMain"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "500":
          $ref: "#/components/responses/500"
      security:
        - bearer_token: []          
    put:
      tags:
        - Item Group Main
      operationId: updateItemGroup Main
      summary: Update an existing item Group Main
      description: "for add product sync to item Group Main"
      parameters:
        - name: code
          in: path
          description: code of product to update
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/ItemGroupMain'
      responses:
        "200":
          $ref: "#/components/responses/200"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "500":
          $ref: "#/components/responses/500"
      security:
        - bearer_token: []
    delete:
      tags:
        - Item Group Main
      operationId: deleteItemGroup Main
      summary: Delete a item Group Main
      description: "for add item Group Main"
      parameters:
        - name: code
          in: path
          description: code of item Group Main to delete
          required: true
          schema:
            type: string
      responses:
        "200":
          $ref: "#/components/responses/200"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "500":
          $ref: "#/components/responses/500"
      security:
        - bearer_token: []
  /itemgroupsub:
    post:
      tags:
        - Item Group Sub
      summary: Create new item Group Sub
      operationId: addItemGroup Sub
      description: "for add new item Group Sub"
      requestBody:
        $ref: '#/components/requestBodies/ItemGroupSub'
      responses:
        "201":
          $ref: "#/components/responses/201"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "500":
          $ref: "#/components/responses/500"
      security:
        - bearer_token: []          
    get:
      tags:
        - Item Group Sub
      operationId: listItemGroup Sub
      summary: List item Group Sub
      description: "for list all item Group Sub."      
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                allOf:
                   - $ref: "#/components/schemas/ResponseSuccess"
                properties:
                  data:
                    type: array
                    description: Item Group Sub
                    items:
                      $ref: "#/components/schemas/ItemGroupSub"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "500":
          $ref: "#/components/responses/500"
      security:
        - bearer_token: []
  /itemgroupsub/{code}:
    get:
      tags:
        - Item Group Sub
      operationId: getItemGroup Sub
      summary: Get item Group Sub by code.
      description: "for get item Group Sub by code."
      parameters:
        - name: code
          in: path
          description: code of item Group Sub to return
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                allOf:
                   - $ref: "#/components/schemas/ResponseSuccess"
                properties:
                  data:
                    type: object
                    $ref: "#/components/schemas/ItemGroupSub"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "500":
          $ref: "#/components/responses/500"
      security:
        - bearer_token: []          
    put:
      tags:
        - Item Group Sub
      operationId: updateItemGroup Sub
      summary: Update an existing item Group Sub
      description: "for add product sync to item Group Sub"
      parameters:
        - name: code
          in: path
          description: code of product to update
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/ItemGroupSub'
      responses:
        "200":
          $ref: "#/components/responses/200"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "500":
          $ref: "#/components/responses/500"
      security:
        - bearer_token: []
    delete:
      tags:
        - Item Group Sub
      operationId: deleteItemGroup Sub
      summary: Delete a item Group Sub
      description: "for add item Group Sub"
      parameters:
        - name: code
          in: path
          description: code of item Group Sub to delete
          required: true
          schema:
            type: string
      responses:
        "200":
          $ref: "#/components/responses/200"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "500":
          $ref: "#/components/responses/500"
      security:
        - bearer_token: []
  /itemclass:
    post:
      tags:
        - Item Class
      summary: Create new item class
      operationId: addItemClass
      description: "for add new item class"
      requestBody:
        $ref: '#/components/requestBodies/ItemClass'
      responses:
        "201":
          $ref: "#/components/responses/201"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "500":
          $ref: "#/components/responses/500"
      security:
        - bearer_token: []          
    get:
      tags:
        - Item Class
      operationId: listItemClass
      summary: List item class
      description: "for list all item class."      
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                allOf:
                   - $ref: "#/components/schemas/ResponseSuccess"
                properties:
                  data:
                    type: array
                    description: Item class
                    items:
                      $ref: "#/components/schemas/ItemClass"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "500":
          $ref: "#/components/responses/500"
      security:
        - bearer_token: []
  /itemclass/{code}:
    get:
      tags:
        - Item Class
      operationId: getItemClass
      summary: Get item class by code.
      description: "for get item class by code."
      parameters:
        - name: code
          in: path
          description: code of item class to return
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                allOf:
                   - $ref: "#/components/schemas/ResponseSuccess"
                properties:
                  data:
                    type: object
                    $ref: "#/components/schemas/ItemClass"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "500":
          $ref: "#/components/responses/500"
      security:
        - bearer_token: []          
    put:
      tags:
        - Item Class
      operationId: updateItemClass
      summary: Update an existing item class
      description: "for add product sync to item class"
      parameters:
        - name: code
          in: path
          description: code of product to update
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/ItemClass'
      responses:
        "200":
          $ref: "#/components/responses/200"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "500":
          $ref: "#/components/responses/500"
      security:
        - bearer_token: []
    delete:
      tags:
        - Item Class
      operationId: deleteItemClass
      summary: Delete a item class
      description: "for add item class"
      parameters:
        - name: code
          in: path
          description: code of item class to delete
          required: true
          schema:
            type: string
      responses:
        "200":
          $ref: "#/components/responses/200"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "500":
          $ref: "#/components/responses/500"
      security:
        - bearer_token: []
  /itempattern:
    post:
      tags:
        - Item Pattern
      summary: Create new item pattern
      operationId: addItemPattern
      description: "for add new item pattern"
      requestBody:
        $ref: '#/components/requestBodies/ItemPattern'
      responses:
        "201":
          $ref: "#/components/responses/201"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "500":
          $ref: "#/components/responses/500"
      security:
        - bearer_token: []          
    get:
      tags:
        - Item Pattern
      operationId: listItemPattern
      summary: List item pattern
      description: "for list all item pattern."      
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                allOf:
                   - $ref: "#/components/schemas/ResponseSuccess"
                properties:
                  data:
                    type: array
                    description: Item pattern
                    items:
                      $ref: "#/components/schemas/ItemPattern"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "500":
          $ref: "#/components/responses/500"
      security:
        - bearer_token: []
  /itempattern/{code}:
    get:
      tags:
        - Item Pattern
      operationId: getItemPattern
      summary: Get item pattern by code.
      description: "for get item pattern by code."
      parameters:
        - name: code
          in: path
          description: code of item pattern to return
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                allOf:
                   - $ref: "#/components/schemas/ResponseSuccess"
                properties:
                  data:
                    type: object
                    $ref: "#/components/schemas/ItemPattern"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "500":
          $ref: "#/components/responses/500"
      security:
        - bearer_token: []          
    put:
      tags:
        - Item Pattern
      operationId: updateItemPattern
      summary: Update an existing item pattern
      description: "for add product sync to item pattern"
      parameters:
        - name: code
          in: path
          description: code of product to update
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/ItemPattern'
      responses:
        "200":
          $ref: "#/components/responses/200"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "500":
          $ref: "#/components/responses/500"
      security:
        - bearer_token: []
    delete:
      tags:
        - Item Pattern
      operationId: deleteItemPattern
      summary: Delete a item pattern
      description: "for add item pattern"
      parameters:
        - name: code
          in: path
          description: code of item pattern to delete
          required: true
          schema:
            type: string
      responses:
        "200":
          $ref: "#/components/responses/200"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "500":
          $ref: "#/components/responses/500"
      security:
        - bearer_token: []
  /itemdesign:
    post:
      tags:
        - Item Design
      summary: Create new item design
      operationId: addItemDesign
      description: "for add new item design"
      requestBody:
        $ref: '#/components/requestBodies/ItemDesign'
      responses:
        "201":
          $ref: "#/components/responses/201"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "500":
          $ref: "#/components/responses/500"
      security:
        - bearer_token: []          
    get:
      tags:
        - Item Design
      operationId: listItemDesign
      summary: List item design
      description: "for list all item design."      
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                allOf:
                   - $ref: "#/components/schemas/ResponseSuccess"
                properties:
                  data:
                    type: array
                    description: Item design
                    items:
                      $ref: "#/components/schemas/ItemDesign"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "500":
          $ref: "#/components/responses/500"
      security:
        - bearer_token: []
  /itemdesign/{code}:
    get:
      tags:
        - Item Design
      operationId: getItemDesign
      summary: Get item design by code.
      description: "for get item design by code."
      parameters:
        - name: code
          in: path
          description: code of item design to return
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                allOf:
                   - $ref: "#/components/schemas/ResponseSuccess"
                properties:
                  data:
                    type: object
                    $ref: "#/components/schemas/ItemDesign"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "500":
          $ref: "#/components/responses/500"
      security:
        - bearer_token: []          
    put:
      tags:
        - Item Design
      operationId: updateItemDesign
      summary: Update an existing item design
      description: "for add product sync to item design"
      parameters:
        - name: code
          in: path
          description: code of product to update
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/ItemDesign'
      responses:
        "200":
          $ref: "#/components/responses/200"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "500":
          $ref: "#/components/responses/500"
      security:
        - bearer_token: []
    delete:
      tags:
        - Item Design
      operationId: deleteItemDesign
      summary: Delete a item design
      description: "for add item design"
      parameters:
        - name: code
          in: path
          description: code of item design to delete
          required: true
          schema:
            type: string
      responses:
        "200":
          $ref: "#/components/responses/200"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "500":
          $ref: "#/components/responses/500"
      security:
        - bearer_token: []
  /itemgrade:
    post:
      tags:
        - Item Grade
      summary: Create new item grade
      operationId: addItemGrade
      description: "for add new item grade"
      requestBody:
        $ref: '#/components/requestBodies/ItemGrade'
      responses:
        "201":
          $ref: "#/components/responses/201"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "500":
          $ref: "#/components/responses/500"
      security:
        - bearer_token: []          
    get:
      tags:
        - Item Grade
      operationId: listItemGrade
      summary: List item grade
      description: "for list all item grade."      
      responses:
        "200":
          description: List of item model
          content:
            application/json:
              schema:
                type: object
                allOf:
                   - $ref: "#/components/schemas/ResponseSuccess"
                properties:
                  data:
                    type: array
                    description: Item grade
                    items:
                      $ref: "#/components/schemas/ItemGrade"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "500":
          $ref: "#/components/responses/500"
      security:
        - bearer_token: []
  /itemgrade/{code}:
    get:
      tags:
        - Item Grade
      operationId: getItemGrade
      summary: Get item grade by code.
      description: "for get item grade by code."
      parameters:
        - name: code
          in: path
          description: code of item grade to return
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                allOf:
                   - $ref: "#/components/schemas/ResponseSuccess"
                properties:
                  data:
                    type: object
                    $ref: "#/components/schemas/ItemGrade"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "500":
          $ref: "#/components/responses/500"
      security:
        - bearer_token: []          
    put:
      tags:
        - Item Grade
      operationId: updateItemGrade
      summary: Update an existing item grade
      description: "for add product sync to item grade"
      parameters:
        - name: code
          in: path
          description: code of grade to update
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/ItemGrade'
      responses:
        "200":
          $ref: "#/components/responses/200"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "500":
          $ref: "#/components/responses/500"
      security:
        - bearer_token: []
    delete:
      tags:
        - Item Grade
      operationId: deleteItemGrade
      summary: Delete a item grade
      description: "for add item grade"
      parameters:
        - name: code
          in: path
          description: code of item grade to delete
          required: true
          schema:
            type: string
      responses:
        "200":
          $ref: "#/components/responses/200"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "500":
          $ref: "#/components/responses/500"
      security:
        - bearer_token: []
  /itemmodel:
    post:
      tags:
        - Item Model
      summary: Create new item model
      operationId: addItemModel
      description: "for add new item model"
      requestBody:
        $ref: '#/components/requestBodies/ItemModel'
      responses:
        "201":
          $ref: "#/components/responses/201"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "500":
          $ref: "#/components/responses/500"
      security:
        - bearer_token: []          
    get:
      tags:
        - Item Model
      operationId: listItemModel
      summary: List item model
      description: "for list all item model."      
      responses:
        "200":
          description: List of item model
          content:
            application/json:
              schema:
                type: object
                allOf:
                   - $ref: "#/components/schemas/ResponseSuccess"
                properties:
                  data:
                    type: array
                    description: Item model
                    items:
                      $ref: "#/components/schemas/ItemModel"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "500":
          $ref: "#/components/responses/500"
      security:
        - bearer_token: []
  /itemmodel/{code}:
    get:
      tags:
        - Item Model
      operationId: getItemModel
      summary: Get item model by code.
      description: "for get item model by code."
      parameters:
        - name: code
          in: path
          description: code of item model to return
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                allOf:
                   - $ref: "#/components/schemas/ResponseSuccess"
                properties:
                  data:
                    type: object
                    $ref: "#/components/schemas/ItemModel"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "500":
          $ref: "#/components/responses/500"
      security:
        - bearer_token: []          
    put:
      tags:
        - Item Model
      operationId: updateItemModel
      summary: Update an existing item model
      description: "for add product sync to item model"
      parameters:
        - name: code
          in: path
          description: code of product to update
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/ItemModel'
      responses:
        "200":
          $ref: "#/components/responses/200"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "500":
          $ref: "#/components/responses/500"
      security:
        - bearer_token: []
    delete:
      tags:
        - Item Model
      operationId: deleteItemModel
      summary: Delete a item model
      description: "for add item model"
      parameters:
        - name: code
          in: path
          description: code of item model to delete
          required: true
          schema:
            type: string
      responses:
        "200":
          $ref: "#/components/responses/200"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "500":
          $ref: "#/components/responses/500"

      security:
        - bearer_token: []  
  /saleinvoice:
    post:
      tags:
        - Transaction
      operationId: syncSaleInvoice
      summary: Sync sale invoice(SI)
      description: Sync sale invoice(SI)
      requestBody:
        $ref: '#/components/requestBodies/SaleInvoice'
      responses:
        "201":
          $ref: "#/components/responses/201"
        "400":
          $ref: "#/components/responses/400"
  /salecreditnote:
    post:
      tags:
        - Transaction
      operationId: syncSaleCreditNote
      summary: Sync sale credit note(CN)
      description: Sync sale credit note(CN))
      requestBody:
        $ref: '#/components/requestBodies/SaleCreditNote'
      responses:
        "201":
          $ref: "#/components/responses/201"
        "400":
          $ref: "#/components/responses/400"
  /saledebitnote:
    post:
      tags:
        - Transaction
      operationId: syncSaleDebitNote
      summary: Sync sale debit note(DN)
      description: Sync sale debit note(DN)
      requestBody:
        $ref: '#/components/requestBodies/SaleDebitNote'
      responses:
        "201":
          $ref: "#/components/responses/201"
        "400":
          $ref: "#/components/responses/400"
  /purchaseinvoice:
    post:
      tags:
        - Transaction
      operationId: syncPurchaseInvoice
      summary: Sync purchase invoice(PU)
      description: Sync purchase invoice(PU)
      requestBody:
        $ref: '#/components/requestBodies/PurchaseInvoice'
      responses:
        "201":
          $ref: "#/components/responses/201"
        "400":
          $ref: "#/components/responses/400"
  /purchasecreditnote:
    post:
      tags:
        - Transaction
      operationId: syncPurchaseCreditNote
      summary: Sync purchase credit note
      description: Sync purchase credit note
      requestBody:
        $ref: '#/components/requestBodies/PurchaseCreditNote'
      responses:
        "201":
          $ref: "#/components/responses/201"
        "400":
          $ref: "#/components/responses/400"
  /purchasedebitnote:
    post:
      tags:
        - Transaction
      operationId: syncPurchaseDebitNote
      summary: Sync purchase debit note
      description: Sync purchase debit note
      requestBody:
        $ref: '#/components/requestBodies/PurchaseDebitNote'
      responses:
        "201":
          $ref: "#/components/responses/201"
        "400":
          $ref: "#/components/responses/400"
  /purchaseorder:
    post:
      tags:
        - Transaction
      operationId: syncPurchaseOrder
      summary: Sync purchase order(PO)
      description: Sync purchase order(PO)
      requestBody:
        $ref: '#/components/requestBodies/PurchaseOrder'
      responses:
        "201":
          $ref: "#/components/responses/201"
        "400":
          $ref: "#/components/responses/400"
  /master-sync:
    get:
      tags:
        - Master Sync
      operationId: getMasterSync
      summary: Get master sync
      description: Get master
      parameters:
        - name: lastupdate
          in: query
          description: code of product to return
          required: true
          schema:
            type: string
            format: "0000-00-00T00:00:00"
        - name: action
          in: query
          description: action for sync (all, new, remove)
          required: false
          schema:
            type: string
      security:
        - api_key_dealer: []
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ResponseSuccess"
                properties:
                  data:
                    $ref: "#/components/schemas/SyncDataResponse"
                  pagination:
                    $ref: "#/components/schemas/Pagination"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "500":
          $ref: "#/components/responses/500"
  /master-sync/status:
    get:
      tags:
        - Master Sync
      operationId: statusMasterSync
      summary: Get master sync status
      security:
        - api_key_dealer: []
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SyncStatus"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "500":
          $ref: "#/components/responses/500"
  /master-sync/list:
    get:
      tags:
        - Master Sync
      operationId: listMasterSync
      summary: List master sync
      parameters:
        - name: lastupdate
          in: query
          description: code of product to return
          required: true
          schema:
            type: string
            format: "0000-00-00T00:00:00"
        - name: action
          in: query
          description: action for sync (all, new, remove)
          required: false
          schema:
            type: string
      security:
        - api_key_dealer: []
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ResponseSuccess"
                properties:
                  data:
                    $ref: "#/components/schemas/SyncDataResponse"
                  pagination:
                    $ref: "#/components/schemas/Pagination"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "500":
          $ref: "#/components/responses/500"
  /stockdealer:
    post:
      tags:
        - Stock Dealer
      operationId: syncStockDealer
      summary: Sync stock dealer
      description: Sync stock dealer
      requestBody:
        $ref: '#/components/requestBodies/StockDealer'
      responses:
        "201":
          $ref: "#/components/responses/201"
        "400":
          $ref: "#/components/responses/400"
      security:
          - bearer_token: []    
components:
  requestBodies:
    Product:
      content:
         application/json:
          schema:
            type: object
            allOf:
               - $ref: "#/components/schemas/Product"
            properties:
              dealers:
                type: array
                description: ผู้แทนจำหน่าย
                items:
                  $ref: "#/components/schemas/ProductDealerSync"
          example:
           code: "IC0001"
           name_1: "Product Name 1"
           unit_cost: "PCS"
           item_type: 0
           tax_type: 0
           units:
             - code: "PCS"
               stand_value: 1
               divide_value: 1
               ratio: 1
               row_order: 0
               line_number: 0
           dealers:
             - dealercode: "204900001"
               issync: true
    Dealer:
      content:
         application/json:
          schema:
            $ref: "#/components/schemas/Dealer"
    ProductDealer:
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: "#/components/schemas/ProductDealer"
    ItemUnit:
      content:
         application/json:
          schema:
            $ref: "#/components/schemas/Unit"
    ItemBrand:
      content:
         application/json:
          schema:
            $ref: "#/components/schemas/ItemBrand"
    ItemCategory:
      content:
         application/json:
          schema:
            $ref: "#/components/schemas/ItemCategory"
    ItemGroupMain:
      content:
         application/json:
          schema:
            $ref: "#/components/schemas/ItemGroupMain"
    ItemGroupSub:
      content:
         application/json:
          schema:
            $ref: "#/components/schemas/ItemGroupSub"
    ItemDesign:
      content:
         application/json:
          schema:
            $ref: "#/components/schemas/ItemDesign"
    ItemClass:
      content:
         application/json:
          schema:
            $ref: "#/components/schemas/ItemClass"
    ItemPattern:
      content:
         application/json:
          schema:
            $ref: "#/components/schemas/ItemPattern"
    ItemGrade:
      content:
         application/json:
          schema:
            $ref: "#/components/schemas/ItemGrade"
    ItemModel:
      content:
         application/json:
          schema:
            $ref: "#/components/schemas/ItemModel"
    SaleInvoice:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/SaleInvoiceTransaction"
    SaleCreditNote:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/TransactionWithPayment"
    SaleDebitNote:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/TransactionWithPayment"
    PurchaseInvoice:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/TransactionWithPayment"
    PurchaseCreditNote:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/TransactionWithPayment"
    PurchaseDebitNote:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/TransactionWithPayment"
    PurchaseOrder:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Transaction"
    StockDealer:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/StockDealer"
    
  responses:
    '200':
      description: Created success
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ApiResponse"
          example:
            message: success
            success: true
    '201':
      description: Created success
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ApiResponse"
          example:
            message: Created success
            success: true
    '400':
      description: Bad request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ApiResponse"
          example:
            message: Bad request
            success: false
    '401':
      description: Unauthorize
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ApiResponse"
          example:
            message: Unauthorize
            success: false
    '500':
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ApiResponse"
          example:
            code: 99999
            message: Internal server error
            success: false
  schemas:
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        success:
          type: boolean
    ResponseSuccess:
      type: object
      properties:
        success:
          type: boolean
    Pagination:
      type: object
      properties:
        total:
          type: integer
          format: int64
        page:
          type: integer
          format: int64
        perpage:
          type: integer
          format: int64
        prev:
          type: integer
          format: int64
        next:
          type: integer
          format: int64
        totalpage:
          type: integer
          format: int64       
    PageableKeySort:
      type: object
      properties:
        key:
          type: string
          description: ชื่อฟิลด์ที่จะเรียง
        value:
          type: integer
    Pageable:
      type: object
      properties:
        query:
          type: string
          description: คำค้นหา
        page:
          type: integer
        limit:
          type: integer
        softs:
          type: array
          items:
            $ref: "#/components/schemas/PageableKeySort"
    Product:
      type: object
      properties:
        code:
          type: string
          description: รหัสสินค้า
          maxLength: 25
        name_1:
          type: string
          description: ชื่อสินค้า
          maxLength: 255
        name_eng_1:
          type: string
          description: ชื่อ (ภาษาอังกฤษ)
          maxLength: 255
        short_name:
          type: string
          description: ชื่อสินค้าแบบย่อ
          maxLength: 255
        unit_cost:
          type: string
          description: รหัสหน่วยนับ(ต้นทุน)
          maxLength: 25
        price_recommended:
          type: number
          description: ราคาขายแนะนำ
        item_category:
          type: string
          description: รหัสหมวดสินค้า
          maxLength: 25
        group_main:
          type: string
          description: รหัสกลุ่มสินค้าหลัก
          maxLength: 25
        group_sub:
          type: string
          description: รหัสกลุ่มสินค้าย่อย
          maxLength: 25
        group_sub2:
          type: string
          description: รหัสกลุ่มสินค้าย่อย 2
          maxLength: 25
        item_class:
          type: string
          description: รหัสระดับสินค้า
          maxLength: 25
        item_pattern:
          type: string
          description: รหัสรูปแบบสินค้า
          maxLength: 25
        item_brand:
          type: string
          description: รหัสยี่ห้อ
          maxLength: 25
        item_design:
          type: string
          description: รหัสรูปทรง
          maxLength: 25
        item_grade:
          type: string
          description: รหัสเกรดสินค้า          
          maxLength: 25
        item_model:
          type: string
          description: รหัสรุ่นสินค้า          
          maxLength: 25
        code_old:
          type: string
          maxLength: 25
          description: รหัสสินค้าเดิม
        tax_type:
          type: integer
          description: ประเภทภาษี (0=ภาษีมูลค่าเพิ่ม, 1=ยกเว้นภาษี)
        ic_serial_no:
          type: integer
          description: สินค้ามี Serial (0=ไม่มี, 1=มี)
        account_code_1:
          type: string
          description: รหัสผังบัญชีสินค้า
          maxLength: 25
        account_code_2:
          type: string
          description: รหัสผังบัญชีต้่นทุน
          maxLength: 25
        account_code_3:
          type: string
          description: รหัสผังบัญชีรายได้
          maxLength: 25
        account_code_4:
          type: string
          description: รหัสผังบัญชีรับคืน
          maxLength: 25
        last_update_date_time:
          type: string
          format: date-time
          description: The date and time of the last update.     
        units:
          type: array
          items:
            $ref: "#/components/schemas/ProductUnit"
        barcodes:
          type: array
          items:
            $ref: "#/components/schemas/Barcode"
        product_image:
          type: string
          description: รูปภาพสินค้า
          maxLength: 255
      required:
        - code
        - name_1
        - unit_cost
        - item_type
        - tax_type
    Dealer:
      type: object
      properties:
        code:
          type: string
          description: รหัสตัวแทนจำหน่าย
          maxLength: 25
        name_1:
          type: string
          description: ชื่อ
          maxLength: 25
        name_eng_1:
          type: string
          description: ชื่อ(อังกฤษ)
          maxLength: 25
        tambon_code:
          type: string
          description: รหัสตำบล
          maxLength: 25
        amper_code:
          type: string
          description: รหัสอำเภอ
          maxLength: 25
        province_code:
          type: string
          description: รหัสจังหวัด
          maxLength: 25
    ProductUnit:
      type: object
      properties:
        code:
          type: string
          description: รหัสหน่วยนับ
          maxLength: 25
        line_number:
          type: integer
          description: Line Number
        stand_value:
          type: number
          description: ตัวตั้ง
        divide_value:
          type: number
          description: ตัวหาร
        row_order:
          type: integer
          description: ลำดับที่
        weight:
          type: string
          description: น้ำหนัก
          example: 200 g.
        status:
          type: integer
          description: สถานะ
        unit_size:
          type: number
          description: ขนาดสินค้า
        ratio:
          type: number
          description: อัตราส่วน
        width_length_height:
          type: string
          maxLength: 255
          example: กxยxส
        remark:
          type: string
          description: หมายเหตุ
      required:
        - code
        - stand_value
        - divide_value
        - row_order
        - line_number
    Barcode:
      type: object
      properties:
        barcode:
          type: string
          description: บาร์โค๊ด
          maxLength: 25
        unit_code:
          type: string
          description: รหัสหน่วยนับ
          maxLength: 25
        price:
          type: number
          description: ราคา
      required:
        - barcode
        - unit_code
    Unit:
      type: object
      properties:
        code:
          type: string
          maxLength: 25
          description: รหัสหน่วยนับ
        name_1:
          type: string
          maxLength: 255
          description: ชื่อหน่วยนับ
        name_eng_1:
          type: string
          maxLength: 255
          description: ชื่อหน่วยนับ(อังกฤษ)
    ProductDealer:
      type: object
      properties:
        productcode:
          type: string
          maxLength: 25
          description: รหัสสินค้า
        dealers:
          type: array
          items:
            $ref: '#/components/schemas/ProductDealerSync'
    ProductDealerSync:
      type: object
      properties:
        dealercode:
          type: string
          maxLength: 25
          description: รหัสตัวแทนจำหน่าย
        issync:
          type: boolean
          description: อนุญาติให้ใช้งาน
    Transaction:
      type: object
      properties:
        dealercode:
          type: string
        docno:
          type: string
        docdate:
          type: string
          format: date
        doctime:
          type: string
          example: "00:00:00"
        taxdocno:
          type: string
        taxdocdate:
          type: string
          format: date
        docdatestr:
          type: string
        docdatewithtimezone:
          type: string
          format: date
          description: วันที่เอกสาร(รวมเวลาตาม Timezone)
        docdatewithouttimezone:
          type: string
          format: date
          description: วันที่เอกสาร(ไม่รวมเวลาตาม Timezone)
        taxdocdatestr:
          type: string
          description: วันที่ใบกำกับ(ข้อความ)
        timezone:
          type: string
          description: Timezone (+-?)
        timelocation:
          type: string
          description: Location (Asia/Bangkok)
        custcode:
          type: string
        custname:
          type: string        
        vattype:
          type: integer
          description: ประเภทภาษี(0=ภาษีแยกนอก, 1=ยกเว้นภาษี)
        varrate:
          type: number
        # salecode:
        #   type: string
        # salename:
        #   type: string
        totalvalue:
          type: number
        discountword:
          type: string
        totaldiscount:
          type: number
        totalbeforevat:
          type: number
        totalvatvalue:
          type: number
        totalexceptvat:
          type: number
        items:
          type: array
          items:
            $ref: '#/components/schemas/TransactionItem'
    TransactionItem:
      properties:
        line_number:
          type: integer
        itemcode:
          type: string
        itemname:
          type: string
        unitcode:
          type: string
        unitname:
          type: string
        qty:
          type: number
        price:
          type: number
        discount:
          type: string
        discountamount:
          type: number
        sumamount:
          type: number
        item_tax_type:
          type: integer
          description: ประเภทภาษี(0=มีภาษี, 1=ยกเว้นภาษี)
        sumamountexcludevat:
          type: number
        warehouse:
          type: string
        warehouse_name:
          type: string
        location:
          type: string
        location_name:
          type: string
    Payment:
      type: object
      properties:
        cashamount:
          type: number
        creditcardamount:
          type: number
        chequeamount:
          type: number
        transferamount:
          type: number
        creditcarddetail:
          type: array
          items:
            $ref: '#/components/schemas/CreditCardPayment'
        transferdetail:
          type: array
          items:
            $ref: '#/components/schemas/TransferPayment'
        chequedetail:
          type: array
          items:
            $ref: '#/components/schemas/ChequePayment'
    CreditCardPayment:
      type: object
      properties:
        cardnumber:
          type: string
        approvedcode:
          type: string
        creditcardtype:
          type: string
        amount:
          type: number
        chargeamount:
          type: number
        totalamount:
          type: number
    TransferPayment:
      type: object
      properties:
        transferdate:
          type: string
          format: date
        bankcode:
          type: string
        bankname:
          type: string
        bankbranchcode:
          type: string
        bankbranchname:
          type: string
        amount:
          type: number
    ChequePayment:
      type: object
      properties:
        chequeno:
          type: string
        chequeduedate:
          type: string
          format: date
        bankcode:
          type: string
        bankname:
          type: string
        bankbranchcode:
          type: string
        bankbranchname:
          type: string
        amount:
          type: number
    SaleInvoiceTransaction:
      type: object
      allOf:
        - $ref: '#/components/schemas/Transaction'
      properties:
        saletype:
          type: integer
          description: ประเภทการขาย(1=ขายเชื่อ, 1=ขายเงินสด, 2=ขายเชื่อ/สินค้าบริการ , 3=ขายสด/สินค้าบริการ )
        payment:
          $ref: '#/components/schemas/Payment'
    TransactionWithPayment:
      type: object
      allOf:
        - $ref: '#/components/schemas/Transaction'
      properties:
        payment:
          $ref: '#/components/schemas/Payment'
    SyncStatus:
      type: object
      properties:
        product:
          type: string
          format: date-time
        unit:
          type: string
          format: date-time
        itembrand:
          type: string
          format: date-time
        itemcategory:
          type: string
          format: date-time
        itemgroupmain:
          type: string
          format: date-time
        itemgroupsub:
          type: string
          format: date-time
        itemclass:
          type: string
          format: date-time
        itempattern:
          type: string
          format: date-time
        itemdesign:
          type: string
          format: date-time
        itemgrade:
          type: string
          format: date-time
        itemmodel:
          type: string
          format: date-time
    ItemBrand:
      type: object
      properties:
        code:
          type: string
          maxLength: 25
          description: รหัส
        name_1:
          type: string
          maxLength: 255
          description: ชื่อ
        name_eng_1:
          type: string
          maxLength: 255
          description: ชื่อ(อังกฤษ)
    ItemCategory:
      type: object
      properties:
        code:
          type: string
          maxLength: 25
          description: รหัส
        name_1:
          type: string
          maxLength: 255
          description: ชื่อ
        name_eng_1:
          type: string
          maxLength: 255
          description: ชื่อ(อังกฤษ)
    ItemGroupMain:
      type: object
      properties:
        code:
          type: string
          maxLength: 25
          description: รหัส
        name_1:
          type: string
          maxLength: 255
          description: ชื่อ
        name_eng_1:
          type: string
          maxLength: 255
          description: ชื่อ(อังกฤษ)
    ItemGroupSub:
      type: object
      properties:
        code:
          type: string
          maxLength: 25
          description: รหัส
        name_1:
          type: string
          maxLength: 255
          description: ชื่อ
        name_eng_1:
          type: string
          maxLength: 255
          description: ชื่อ(อังกฤษ)
    ItemClass:
      type: object
      properties:
        code:
          type: string
          maxLength: 25
          description: รหัส
        name_1:
          type: string
          maxLength: 255
          description: ชื่อ
        name_eng_1:
          type: string
          maxLength: 255
          description: ชื่อ(อังกฤษ)
    ItemPattern:
      type: object
      properties:
        code:
          type: string
          maxLength: 25
          description: รหัส
        name_1:
          type: string
          maxLength: 255
          description: ชื่อ
        name_eng_1:
          type: string
          maxLength: 255
          description: ชื่อ(อังกฤษ)
    ItemDesign:
      type: object
      properties:
        code:
          type: string
          maxLength: 25
          description: รหัส
        name_1:
          type: string
          maxLength: 255
          description: ชื่อ
        name_eng_1:
          type: string
          maxLength: 255
          description: ชื่อ(อังกฤษ)
    ItemGrade:
      type: object
      properties:
        code:
          type: string
          maxLength: 25
          description: รหัส
        name_1:
          type: string
          maxLength: 255
          description: ชื่อ
        name_eng_1:
          type: string
          maxLength: 255
          description: ชื่อ(อังกฤษ)
    ItemModel:
      type: object
      properties:
        code:
          type: string
          maxLength: 25
          description: รหัส
        name_1:
          type: string
          maxLength: 255
          description: ชื่อ
        name_eng_1:
          type: string
          maxLength: 255
          description: ชื่อ(อังกฤษ)
    SyncDataResponse:
      type: object
      properties:
        product:
          type: object
          properties: 
            new:
              type: array
              items:
                $ref: "#/components/schemas/Product"
            remove:
              type: array
              items:
                $ref: "#/components/schemas/Product"
        unit:
          type: object
          properties: 
            new:
              type: array
              items:
                $ref: "#/components/schemas/Unit"
            remove:
              type: array
              items:
                $ref: "#/components/schemas/Unit"
        itembrand:
          type: object
          properties: 
            new:
              type: array
              items:
                $ref: "#/components/schemas/ItemBrand"
            remove:
              type: array
              items:
                $ref: "#/components/schemas/ItemBrand"
        itemcategory:
          type: object
          properties: 
            new:
              type: array
              items:
                $ref: "#/components/schemas/ItemCategory"
            remove:
              type: array
              items:
                $ref: "#/components/schemas/ItemCategory"
        itemgroupmain:
          type: object
          properties: 
            new:
              type: array
              items:
                $ref: "#/components/schemas/ItemGroupMain"
            remove:
              type: array
              items:
                $ref: "#/components/schemas/ItemGroupMain"
        itemgroupsub:
          type: object
          properties: 
            new:
              type: array
              items:
                $ref: "#/components/schemas/ItemGroupSub"
            remove:
              type: array
              items:
                $ref: "#/components/schemas/ItemGroupSub"
        itemclass:
          type: object
          properties: 
            new:
              type: array
              items:
                $ref: "#/components/schemas/ItemClass"
            remove:
              type: array
              items:
                $ref: "#/components/schemas/ItemClass"
        itempattern:
          type: object
          properties: 
            new:
              type: array
              items:
                $ref: "#/components/schemas/ItemPattern"
            remove:
              type: array
              items:
                $ref: "#/components/schemas/ItemPattern"
        itemdesign:
          type: object
          properties: 
            new:
              type: array
              items:
                $ref: "#/components/schemas/ItemDesign"
            remove:
              type: array
              items:
                $ref: "#/components/schemas/ItemDesign"
        itemgrade:
          type: object
          properties: 
            new:
              type: array
              items:
                $ref: "#/components/schemas/ItemGrade"
            remove:
              type: array
              items:
                $ref: "#/components/schemas/ItemGrade"
        itemmodel:
          type: object
          properties: 
            new:
              type: array
              items:
                $ref: "#/components/schemas/ItemModel"
            remove:
              type: array
              items:
                $ref: "#/components/schemas/ItemModel"
    StockDealer:
      type: object
      properties:
        code:
          type: string
          description: รหัสสินค้า
          maxLength: 25
        name_1:
          type: string
          description: ชื่อสินค้า
          maxLength: 255
        unit_cost:
          type: string
          description: รหัสหน่วยนับ(ต้นทุน)
          maxLength: 25
        balance_qty:
          type: number
          description: จำนวนคงเหลือ
        dealer_code:
          type: string
          maxLength: 25
          description: รหัสตัวแทนจำหน่าย
  securitySchemes:
    bearer_token:      
      type: http
      scheme: bearer      
      bearerFormat: Bearer <token>
    api_key:
      type: apiKey
      name: x-api-key
      in: header
    api_key_dealer:
      type: apiKey
      name: x-shop-api-key
      in: header
        